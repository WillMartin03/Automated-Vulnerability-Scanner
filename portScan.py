import socket
import threading
from tqdm import tqdm

def scan_ports(ip, start_port, end_port, result, progress_bar):
	for port in range(start_port, end_port + 1):
		sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		sock.settimeout(1)
		result[port] = sock.connect_ex((ip, port)) == 0
		sock.close()
		progress_bar.update(1)

def main():
	ip = input("Enter the IP address to scan: ")
	port_range = input("Enter the port range (e.g., 0-65535): ")
	thread_count = min(int(input("Enter the number of threads: ")), 128)

	start_port, end_port = map(int, port_range.split('-'))

	print("Threads:", thread_count)

	ports_per_thread = (end_port - (start_port + 1) + (thread_count - 1)) // thread_count

	result = {}

	total_ports = end_port - start_port + 1
	progress_bar = tqdm(total=total_ports, desc="Scanning Ports", unit="port")

	threads = []
	for i in range(thread_count):
		thread_start = start_port + i * ports_per_thread
		thread_end = min(thread_start + ports_per_thread - 1, end_port)
		thread = threading.Thread(target=scan_ports, args=(ip, thread_start, thread_end, result, progress_bar))
		threads.append(thread)
		thread.start()

	for thread in threads:
		thread.join()

	progress_bar.close()

	open_ports = [port for port, is_open in result.items() if is_open]

	print("Open ports:", open_ports)

if __name__ == "__main__":
	main()
